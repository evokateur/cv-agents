job_analysis_task:
  description: >
    Analyze the job posting URL provided ({job_posting_url}) and extract structured
    information into the JobPosting schema. Follow these rules:

    **1. Metadata**
    - Extract job title, company name, industry, full description, and experience level.

    **2. Requirements**
    - Extract degrees, certifications, and explicit "years of experience" requirements.
    - Identify hard requirements (licenses, mandatory credentials).

    **3. Skills**
    - Technical skills: programming languages, frameworks, cloud platforms, tools.
    - Soft skills: communication, teamwork, leadership, problem-solving.
    - Preferred skills: "nice-to-have" extras.

    **4. Responsibilities**
    - Bullet out day-to-day tasks, focusing on specific duties (not vague culture blurbs).

    **5. ATS Alignment**
    - Keywords: important phrases used in the posting for filtering.
    - Tools/tech stack: specific named technologies (AWS, Docker, React, etc).

    **6. Normalization**
    - Deduplicate terms (merge "Python 3" and "Python").
    - Expand acronyms if possible (e.g., "CI/CD" -> "Continuous Integration / Continuous Deployment").
    - Filter out vague corporate jargon ("fast-paced environment", "great culture").

    Output must be a valid JobPosting object.
  expected_output: >
    A validated JobPosting object with all fields populated where possible,
    ensuring consistency and ATS-awareness.
  output_file: "{output_directory}/job_analysis.json"
  agent: job_analyst

cv_alignment_task:
  description: >
    Create a CvTransformationPlan to align the candidate's CV with the job requirements.

    PROCESS:
    1. Read the JobPosting requirements and candidate's CV at {candidate_cv_path}
    2. For each required skill/technology, use Knowledge base("skill name") to find relevant experience
    3. Build transformation plan with:
       - matching_skills: Skills found in CV or Knowledge Base
       - missing_skills: Skills with no evidence found
       - additions: Specific quotes and file paths from Knowledge Base searches
       - rewrites: Improved descriptions using job terminology

    TOOL USAGE:
    - Use Knowledge base with simple strings: Knowledge base("PHP experience")
    - The tool returns synthesized analysis connecting technical work to broader skills
    - If the search finds related experience, add to matching_skills (not missing_skills)

    RULES:
    - Use exact job posting terminology and company name
    - Never fabricate information
    - Cite specific file paths for all evidence

  expected_output: >
    A CvTransformationPlan JSON object containing a concrete edit plan
    shaped by BOTH the JobPosting and the candidate's knowledge base.
  output_file: "{output_directory}/cv_transformation_plan.json"
  agent: cv_advisor

cv_optimization_task:
  description: >
    You will receive three inputs to complete this task:

    1. A structured job posting object from the previous analysis
    2. A structured CV transformation plan from the previous alignment analysis
    3. A file path to the candidate's current CV: {candidate_cv_path}

    Use your file reading tool to read and analyze the candidate's current CV from this path.
    The CV may be in various formats (JSON, YAML, CSV) and will need to be interpreted and
    restructured into the output format.

    IMPLEMENTATION PROCESS:
    1. Read and parse the current CV from the provided file path
    2. Follow the CvTransformationPlan guidance for restructuring and rewriting
    3. Use Knowledge base to verify and expand on transformation plan citations
    4. Use DirectorySearchTool and FileReadTool to access full context from knowledge base files referenced in the plan
    5. Enhance content with additional relevant details found in the knowledge base

    TOOL USAGE:
    - Knowledge base("specific skill or project") to find supporting evidence for CV improvements
    - DirectorySearchTool to locate relevant files mentioned in the transformation plan
    - FileReadTool to read complete context from knowledge base files for richer content

    Your task is to implement the CV transformation plan by:
    - Following the specific guidance provided in the CvTransformationPlan
    - Prioritizing experiences that the plan identifies as most relevant
    - Rewriting descriptions according to the plan's recommendations
    - Verifying and expanding on knowledge base references from the plan
    - Implementing ATS keyword optimizations specified in the plan
    - Restructuring sections as outlined in the transformation strategy
    - Adding quantifications and metrics as directed by the plan
    - Aligning language and terminology with both job posting and plan guidance
    - Enriching content with additional relevant details from knowledge base access

    Your final output must be a structured CurriculumVitae object that is tailored to the job requirements and enriched with the candidate's strongest qualifications.
  expected_output: >
    A CurriculumVitae object with restructured and rewritten content sections
    tailored specifically to the job requirements, optimized for both ATS
    and human review.
  output_file: "{output_directory}/optimized_cv.json"
  agent: cv_strategist
