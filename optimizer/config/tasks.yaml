job_analysis_task:
  description: >
    Analyze the job posting URL provided ({job_posting_url}) to extract and structure
    the following information:
    - Job title and company name
    - Industry sector
    - Complete job description
    - Experience level required (entry, mid, senior, etc.)
    - General requirements (education, certifications, years of experience)
    - Required skills (must-have technical and soft skills)
    - Preferred skills (nice-to-have skills that give candidates an advantage)
    - Key responsibilities and day-to-day activities
    Use the scraping and search tools to gather comprehensive information.
  expected_output: >
    A structured JobPosting object containing title, company, industry,
    description, experience_level, requirements, required_skills,
    preferred_skills, and responsibilities extracted from the job posting.
  output_file: "{output_directory}/job_analysis.json"
  agent: job_analyst

candidate_profiling_task:
  description: >
    You will receive structured job requirements from the job analysis task:

    [[JobPosting]]

    Your task is to build a comprehensive profile of the job candidate by searching 
    a knowledge base of candidate's work experience and personal qualifications using 
    the CandidateKnowledgeBase tool and synthesizing relevant information. 


    When constructing the profile of the candidate, focus on:

    - Projects and experiences that match required and preferred skills
    - Relevant technical achievements and their business impact
    - Leadership and collaboration examples appropriate to the role level
    - Domain expertise aligned with the industry and responsibilities
    - Quantifiable results and measurable outcomes from past work

    Use semantic search to find related experiences, even if the match is not exact. 

    To use the CandidateKnowledgeBase tool:
    - Always call it with exactly one argument: {"query": "<natural language text>"}
    - Do not pass structured data, JSON objects, or dictionaries as the query.
    - Convert the relevant job requirements into a single natural language query string first.
    - The tool returns relevant text chunks along with their source file paths.

    Example of correct usage:
    {"query": "Find projects and experiences related to backend engineering with Python and AWS in the fintech industry."}

    Example of incorrect usage (do NOT do this):
    {"query": {"description": "Python, AWS, backend"}}  

    When the CandidateKnowledgeBase tool returns results, each result includes a "Source:" line 
    with the full file path. You can read the complete document using the FileReadTool with 
    that exact path to get additional context and details.

    Summarize and integrate retrieved findings into a structured CandidateProfile object
    tailored to the provided job requirements.
  expected_output: >
    A structured CandidateProfile containing relevant experiences, matching skills,
    key projects, achievements, and contextual information tailored to the job requirements.
  output_file: "{output_directory}/candidate_profile.json"
  context: [job_analysis_task]
  agent: candidate_profiler

cv_optimization_task:
  description: >
    You will receive three inputs to complete this task:

    1. A structured job posting object with the following fields:
    [[JobPosting]]

    2. A structured candidate profile object with the following fields:
    [[CandidateProfile]]

    3. A file path to the candidate's current CV:
    {candidate_cv_path}

    Use your file reading tool to read and analyze the candidate's current CV from this path. 
    The CV may be in various formats (JSON, YAML, CSV) and will need to be interpreted and 
    restructured into the output format.

    Your task is to optimize the candidate's CV for the target job by:
    - Prioritizing experiences that best match the required and preferred skills
    - Rewriting descriptions to emphasize relevant achievements and responsibilities
    - Optimizing keyword usage for applicant tracking system (ATS) compatibility
    - Structuring sections to highlight strengths for this specific role
    - Quantifying impact (e.g., metrics, results) wherever possible
    - Aligning language, tone, and terminology with the job posting

    Your final output must be a structured CurriculumVitae object that is tailored to the job requirements and enriched with the candidateâ€™s strongest qualifications.
  expected_output: >
    A CurriculumVitae object with restructured and rewritten content sections
    tailored specifically to the job requirements, optimized for both ATS
    and human review.
  output_file: "{output_directory}/cv_optimization.json"
  context: [job_analysis_task, candidate_profiling_task]
  agent: cv_strategist
